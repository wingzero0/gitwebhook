imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

doctrine_cache:
    providers:
        gearman_cache:
            type: file_system
            namespace: doctrine_cache.ns.gearman

gearman:
    # Bundles will parsed searching workers
    bundles:
        # Name of bundle
        AppBundle:

            # Bundle name
            name: AppBundle

            # Bundle search can be enabled or disabled
            active: true

            # If any include is defined, Only these namespaces will be parsed
            # Otherwise, full Bundle will be parsed
            include:
                - Services
                #- EventListener

            # Namespaces this Bundle will ignore when parsing
            ignore:
                - DependencyInjection
                - Resources

    # Resources - list of directories (relative to kernel root dir) which will be searched for workers
    # This is useful if you don't have an "AppBundle"
    #resources:
    #    Dir/With/Workers

    # default values
    # All these values will be used if are not overwritten in Workers or jobs
    defaults:

        # Default method related with all jobs
        # do // deprecated as of pecl/gearman 1.0.0. Use doNormal
        # doNormal
        # doBackground
        # doHigh
        # doHighBackground
        # doLow
        # doLowBackground
        method: doNormal

        # Default number of executions before job dies.
        # If annotations defined, will be overwritten
        # If empty, 0 is defined by default
        iterations: 150

        # Default amount of time in seconds required for the execution to run.
        # This is useful if using a tool such as supervisor which may expect a command to run for a
        # minimum period of time to be considered successful and avoid fatal termination.
        # If empty, no minimum time is required
        #minimum_execution_time: null

        # Default maximum amount of time in seconds for a worker to remain idle before terminating.
        # If empty, the worker will never timeout
        #timeout: null

        # execute callbacks after operations using Kernel events
        callbacks: true

        # Prefix in all jobs
        # If empty name will not be modified
        # Useful for rename jobs in different environments
        #job_prefix: null

        # Autogenerate unique key in jobs/tasks if not set
        # This key is unique given a Job name and a payload serialized
        generate_unique_key: true

        # Prepend namespace when callableName is built
        # By default this variable is set as true
        workers_name_prepend_namespace: true

    # Server list where workers and clients will connect to
    # Each server must contain host and port
    # If annotations defined, will be full overwritten
    #
    # If servers empty, simple localhost server is defined by default
    # If port empty, 4730 is defined by default
    servers:
        localhost:
            host: 127.0.0.1
            port: 4730
